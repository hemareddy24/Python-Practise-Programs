def minion_game(string):
    # your code goes here
    vowels="AEIOU"
    kevin={}
    stuart={}
    n=len(s) 
    for start in range(1, n+1):
        for end in range(0, n-start+1):
            substr=s[end:start+end]
            if substr[0] in vowels:
                kevin[substr]=kevin.get(substr, 0)+1
            else:
                stuart[substr]=stuart.get(substr, 0)+1
    kevin_score = sum(kevin.values())
    stuart_score = sum(stuart.values())
    if kevin_score >stuart_score:
        print(f"Kevin {kevin_score}")
    elif kevin_score < stuart_score:
        print(f"Stuart {stuart_score}")
    else:
        print("Draw")
if __name__ == '__main__':
    s = input()
    minion_game(s)




#OPTIMIZED APPROACH
def minion_game(string):
    vowels = "AEIOU"
    n = len(string)
    kevin_score = 0
    stuart_score = 0
    for i in range(n):
        if string[i] in vowels:
            kevin_score += n - i
        else:
            stuart_score += n - i
    if kevin_score > stuart_score:
        print(f"Kevin {kevin_score}")
    elif kevin_score < stuart_score:
        print(f"Stuart {stuart_score}")
    else:
        print("Draw")

if __name__ == '__main__':
    s = input().strip()
    minion_game(s)


